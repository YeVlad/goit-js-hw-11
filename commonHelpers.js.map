{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export function makeGallery(getedObject) {\n  const neccesaryArray = getedObject.hits;\n  return neccesaryArray\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n        <li class=\"card\">\n            <a href=\"${largeImageURL}\">\n                <img src=\"${webformatURL}\" alt=\"${tags}\"/>\n            </a>\n            <div>\n                <div>\n                    <span class=\"bold-text\">Likes</span>\n                    <span class=\"info\">${likes}</span>\n                </div>\n                <div>\n                    <span class=\"bold-text\">Views</span>\n                    <span class=\"info\">${views}</span>\n                </div>\n                <div>\n                    <span class=\"bold-text\">Comments</span>\n                    <span class=\"info\">${comments}</span>\n                </div><div>\n                    <span class=\"bold-text\">Downloads</span>\n                    <span class=\"info\">${downloads}</span>\n                </div>\n            </div>\n        </li>`\n    )\n    .join('');\n}\n","import { makeGallery } from './render-functions';\n\nexport async function doFetch(aim, textToWait, gallery) {\n  const API_KEY = '16991331-df0a6792d36af314f174a3b15';\n  const url = 'https://pixabay.com/api/';\n\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: aim,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 9,\n  });\n\n  textToWait.hidden = false;\n\n  fetch(`${url}?${params}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(data => {\n      return makeGallery(data);\n    })\n    .then(newGallery => {\n      textToWait.hidden = true;\n      gallery.insertAdjacentHTML('beforeend', newGallery);\n    })\n    .catch(error => {\n      textToWait.hidden = true;\n      console.log(error);\n    });\n}\n","import { doFetch } from './js/pixabay-api';\n\nconst form = document.querySelector('.form-search');\nconst textWait = document.querySelector('.text-wait');\nconst photoGallery = document.querySelector('.images-place');\n\nform.addEventListener('submit', handleSearch);\n\nasync function handleSearch(event) {\n  event.preventDefault();\n  const searchWord = event.currentTarget.elements.inputSearch.value;\n  await doFetch(searchWord, textWait, photoGallery);\n}\n"],"names":["makeGallery","getedObject","webformatURL","largeImageURL","tags","likes","views","comments","downloads","doFetch","aim","textToWait","gallery","API_KEY","url","params","response","data","newGallery","error","form","textWait","photoGallery","handleSearch","event","searchWord"],"mappings":"ssBAAO,SAASA,EAAYC,EAAa,CAEvC,OADuBA,EAAY,KAEhC,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA;AAAA,uBAEWL,CAAa;AAAA,4BACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,yCAKbC,CAAK;AAAA;AAAA;AAAA;AAAA,yCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,yCAILC,CAAQ;AAAA;AAAA;AAAA,yCAGRC,CAAS;AAAA;AAAA;AAAA,cAI7C,EACA,KAAK,EAAE,CACZ,CCnCO,eAAeC,EAAQC,EAAKC,EAAYC,EAAS,CACtD,MAAMC,EAAU,qCACVC,EAAM,2BAENC,EAAS,IAAI,gBAAgB,CACjC,IAAKF,EACL,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,CACd,CAAG,EAEDC,EAAW,OAAS,GAEpB,MAAM,GAAGG,CAAG,IAAIC,CAAM,EAAE,EACrB,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GACGjB,EAAYiB,CAAI,CACxB,EACA,KAAKC,GAAc,CAClBP,EAAW,OAAS,GACpBC,EAAQ,mBAAmB,YAAaM,CAAU,CACxD,CAAK,EACA,MAAMC,GAAS,CACdR,EAAW,OAAS,GACpB,QAAQ,IAAIQ,CAAK,CACvB,CAAK,CACL,CCjCA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAe,SAAS,cAAc,eAAe,EAE3DF,EAAK,iBAAiB,SAAUG,CAAY,EAE5C,eAAeA,EAAaC,EAAO,CACjCA,EAAM,eAAc,EACpB,MAAMC,EAAaD,EAAM,cAAc,SAAS,YAAY,MAC5D,MAAMf,EAAQgB,EAAYJ,EAAUC,CAAY,CAClD"}